---
- name: Provision resource group in Azure
  hosts: localhost
  gather_facts: false

  # Temporary
  vars:
    operating_system: other
    publisher: MicrosoftWindowsServer
    version: latest
    offer: WindowsServer
    sku: 2022-datacenter-azure-edition-core
    vm_size: Standard_D4s_v3
    vm_names: "{{ new_vm_hostname.split(',') }}"
    # vm_names:
    #   - "{{ new_vm_hostname }}"

  tasks:
    - name: Create RG
      include_role: azure_create_resource_group

    - name: Provision instance Windows
      azure.azcollection.azure_rm_virtualmachine:
        resource_group: "{{ resource_group_name }}"
        name: "{{ item }}"
        storage_account: "{{ storage_account_name }}"
        admin_username: "{{ azureuser }}"
        admin_password: "{{ azurepassword }}"
        vm_size: "{{ vm_size }}"
        os_type: Windows
        managed_disk_type: Standard_LRS
        open_ports:
          - 22
          - 5985
          - 5986
          - 80
          - 443
        image:
          publisher: "{{ publisher }}"
          offer: "{{ offer }}"
          version: "{{ version }}"
          sku: "{{ sku }}"
        tags:
          ansible: managed
          ansible_connection: "{{ new_vm_connection }}"
      register: azure_vm
      loop: "{{ vm_names }}"
      when: publisher == "MicrosoftWindowsServer"
      async: 300
      poll: 0

    - name: Wait for VM Creation to complete
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: jobs_azure_vm
      retries: 60
      delay: 5
      until: jobs_azure_vm.finished
      loop: "{{ azure_vm.results }}"

    - name: Enable WinRM
      when: publisher == "MicrosoftWindowsServer" and new_vm_connection == "winrm"
      block:
        - name: Create VM script extension to enable HTTPS WinRM listener
          azure.azcollection.azure_rm_virtualmachineextension:
            name: winrm-extension
            resource_group: "{{ resource_group_name }}"
            virtual_machine_name: "{{ item }}"
            publisher: Microsoft.Compute
            virtual_machine_extension_type: CustomScriptExtension
            type_handler_version: "1.9"
            settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible-documentation/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1 -EnableCredSSP"}' # noqa:yaml[line-length]
            auto_upgrade_minor_version: true
          loop: "{{ vm_names }}"
          register: vm_script
          async: 300
          poll: 0

        - name: Wait for VM Creation to complete
          ansible.builtin.async_status:
            jid: "{{ item.ansible_job_id }}"
          register: jobs_azure_vm
          retries: 60
          delay: 5
          until: jobs_azure_vm.finished
          loop: "{{ vm_script.results }}"

        - name: Loop to verify WinRM
          ansible.builtin.include_tasks: enable_winrm_loop_azure.yml
          loop: "{{ vm_names }}"


    - name: Enable SSH
      when: publisher == "MicrosoftWindowsServer" and new_vm_connection == "ssh"
      block:
        - name: Create VM script extension to enable SSH
          azure.azcollection.azure_rm_virtualmachineextension:
            name: ssh-extension
            resource_group: "{{ resource_group_name }}"
            virtual_machine_name: "{{ item }}"
            publisher: Microsoft.Azure.OpenSSH
            virtual_machine_extension_type: WindowsOpenSSH
            type_handler_version: "3.0"
          loop: "{{ vm_names }}"

        - name: Loop to verify SSH
          ansible.builtin.include_tasks: enable_ssh_loop_azure.yml
          loop: "{{ vm_names }}"
